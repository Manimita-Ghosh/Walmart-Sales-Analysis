create database walmart_sales;

alter table walmartsalesdata add column Date_new date after date;
set sql_safe_updates = 0;
UPDATE walmartsalesdata 
SET 
    Date_new = STR_TO_DATE(date, '%Y-%m-%d');

SELECT 
    time,
    (CASE
        WHEN `time` BETWEEN '00:00:00' AND '12:00:00' THEN 'Morning'
        WHEN `time` BETWEEN '12:01:00' AND '16:00:00' THEN 'Afternoon'
        ELSE 'Evening'
    END) AS time_of_date
FROM
    walmartsalesdata;
    
    alter table walmartsalesdata add column time_of_date varchar(20);
    
UPDATE walmartsalesdata 
SET 
    time_of_date = (CASE
        WHEN `time` BETWEEN '00:00:00' AND '12:00:00' THEN 'Morning'
        WHEN `time` BETWEEN '12:01:00' AND '16:00:00' THEN 'Afternoon'
        ELSE 'Evening'
    END);
    
   
   alter table walmartsalesdata add column day_name varchar (10);
   
UPDATE walmartsalesdata 
SET 
    day_name = DAYNAME(date_new);
   
alter table walmartsalesdata add column month_name varchar (10);
UPDATE walmartsalesdata 
SET 
    month_name = MONTHNAME(date_new);

--------- Basic Level ---------------

-- what are the unique branches, cities, and product lines are present in the data?

SELECT DISTINCT
    (branch) AS unique_branches
FROM
    walmartsalesdata;
SELECT DISTINCT
    (city) AS unique_cities
FROM
    walmartsalesdata;
SELECT DISTINCT
    (`Product line`) AS unique_productlines
FROM
    walmartsalesdata;

-- What is the total revenue by month?
SELECT 
    month_name, SUM(total) as TotalRevenue
FROM
    walmartsalesdata
GROUP BY month_name;

-- What product line had the largest revenue?
SELECT 
    `Product line`, ROUND(SUM(total), 0) AS total_revenue
FROM
    walmartsalesdata
GROUP BY `Product line`
ORDER BY ROUND(SUM(total), 0) DESC;

-- What is the city with the largest revenue?
SELECT 
    city, ROUND(SUM(total), 0) AS total_revenue
FROM
    walmartsalesdata
GROUP BY city
ORDER BY ROUND(SUM(total), 0) DESC;

-- What is the most common payment method?

SELECT 
    payment, COUNT(*) AS count
FROM
    walmartsalesdata
GROUP BY Payment
ORDER BY count DESC
LIMIT 1;

-- What is the most selling product line?
SELECT 
    `Product Line`, SUM(Quantity) AS TotalQuantitySold
FROM
    walmartsalesdata
GROUP BY `Product Line`
ORDER BY TotalQuantitySold DESC
LIMIT 1;

-- What are the total sales for each branch?
select branch, count(*) as total_sales from walmartsalesdata group by branch;


-- Which gender has made the most purchases?
SELECT 
    gender, COUNT(*) total_transaction
FROM
    walmartsalesdata
GROUP BY Gender;

--------------------------------Intermediate Level--------------------------
-- Analyze sales trends over time: Which months or days have the highest sales?
select month_name, day_name, sum(total) as total_sales from walmartsalesdata group by month_name, day_name order by total_sales desc;

-- What is the distribution of payment methods (e.g., Cash, Credit card, Ewallet)? 
SELECT 
    Payment,
    COUNT(*) AS Payment_Count,
    ROUND(COUNT(*) * 100.0 / (SELECT COUNT(*) FROM WalmartSalesData), 2) AS Percentage
FROM WalmartSalesData
GROUP BY Payment
ORDER BY Payment_Count DESC;

-- Which product line has the highest gross income and sales quantity?
SELECT 
    `Product line`,
    SUM(`gross income`) AS Total_Gross_Income,
    SUM(Quantity) AS Total_Quantity
FROM WalmartSalesData
GROUP BY `Product line`
ORDER BY Total_Gross_Income DESC, Total_Quantity DESC;

-- Compare the average rating by branch or city. Do any locations consistently receive higher ratings?
select branch, city, avg(rating) avg_rating from walmartsalesdata group by Branch, city order by avg_rating desc;

-- How do sales vary month-to-month?
SELECT 
    YEAR(date_new) AS year,
    MONTH(date_new) AS month,
    SUM(total) AS total_sales
FROM
    walmartsalesdata
GROUP BY YEAR(date_new) , MONTH(date_new)
ORDER BY year , month;

----------------Advanced Level-----------------------------
----Perform a profitability analysis: Which branches or product lines have the highest gross margin percentages?
WITH BranchProfitability AS (
    SELECT 
        Branch,
        AVG(`gross margin percentage`) AS Avg_Gross_Margin
    FROM WalmartSalesData
    GROUP BY Branch
)
SELECT 
    Branch,
    Avg_Gross_Margin,
    RANK() OVER (ORDER BY Avg_Gross_Margin DESC) AS Profitability_Rank
FROM BranchProfitability;

